"""
Django settings for ddpui project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
from ddpui.utils.django_logger import setup_logger as setup_django_logger
from ddpui.utils.ddp_logger import setup_logger as setup_ddp_logger
from ddpui.utils.ab_logger import setup_logger as setup_ab_logger
from corsheaders.defaults import default_headers

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGOSECRET")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "") == "True"

# CORS
ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1",
    "staging-api.dalgo.in",
    "api.dalgo.in",
]
CORS_ALLOW_ALL_ORIGINS = False
CORS_ORIGIN_WHITELIST = (
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "https://staging.dalgo.in",
    "https://dashboard.dalgo.in",
)
CORS_ALLOW_HEADERS = (
    *default_headers,
    "x-dalgo-org",
)

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework.authtoken",
    "corsheaders",
    "ddpui",
    "django_prometheus",
    "django_extensions",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "ddpui.auth.BearerAuthentication",
    ]
}

MIDDLEWARE = [
    "django_prometheus.middleware.PrometheusBeforeMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_prometheus.middleware.PrometheusAfterMiddleware",
]

ROOT_URLCONF = "ddpui.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "ddpui.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("DBNAME"),
        "HOST": os.getenv("DBHOST"),
        "USER": os.getenv("DBUSER"),
        "PASSWORD": os.getenv("DBPASSWORD"),
        "PORT": os.getenv("DBPORT"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# custom airbyte connectors
AIRBYTE_CUSTOM_SOURCES = {
    "tech4dev/source-kobotoolbox": {
        "name": "KoboToolbox",
        "docker_repository": "tech4dev/source-kobotoolbox",
        "docker_image_tag": "0.2.0",
        "documentation_url": "",
    },
    "tech4dev/source-commcare": {
        "name": "CommCare T4D",
        "docker_repository": "tech4dev/source-commcare",
        "docker_image_tag": "0.1.0",
        "documentation_url": "",
    },
    "tech4dev/source-avni": {
        "name": "Avni",
        "docker_repository": "tech4dev/source-avni",
        "docker_image_tag": "0.1.0",
        "documentation_url": "",
    },
    "tech4dev/source-papersurvey": {
        "name": "PaperSurvey",
        "docker_repository": "tech4dev/source-papersurvey",
        "docker_image_tag": "0.1.1",
        "documentation_url": "",
    },
}

# finally set up the loggers
setup_django_logger()
setup_ddp_logger()
setup_ab_logger()


# Fixtures to seed data
# python3 manage.py loaddata seed/tasks.json
FIXTURE_DIRS = [
    "seed",
]

PRODUCTION = os.getenv("PRODUCTION", "") == "True"
